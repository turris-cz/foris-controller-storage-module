#!/bin/sh /etc/rc.common

START=40
STOP=90

status() {
        return 0
}

die() {
	create_notification -n error "$1"
	exit 1
}

start() {
	UUID="$(uci -q get storage.srv.uuid)"
        [ -n "$UUID" ] || exit 0
	OLD_UUID="$(uci -q get storage.srv.old_uuid)"
	DEV=""
	DEBUG="$(uci -q get storage.srv.debug | egrep '(1|yes|on)')"	
	[ -z "$DEBUG" ] || set -x
	[ -z "$DEBUG" ] || exec 2>> /tmp/storage_debug
	i=0

	# Try to find a drive
	while [ $i -lt 10 ] && [ -z "$DEV" ]; do
		DEV="$(blkid | sed -n 's|^\(/dev[^:]*\):.* UUID="'"$UUID"'".*|\1|p')"
		sleep 1
		i="$(expr $i + 1)"
	done
	[ -n "$DEV" ] || die "Can't find disk with UUID $UUID"

	# Symlink workaround
	if [ -L /srv ]; then
		link_tgt="$(readlink /srv)"
		rm /srv
		mkdir -p /srv
	fi

	# Mount it
	if [ -n "$(blkid "$DEV" | grep TYPE="ext4")" ]; then
		mount -t ext4 -o noatime "$DEV" /srv || die "Can't mount $DEV as /srv"
		create_notification -n error "Your srv is ext4, you should convert to btrfs to enjoy all features"
	else
		mount -t btrfs -o subvol=@,nodatacow,noatime "$DEV" /srv || die "Can't mount $DEV as /srv"
	fi

	# Find root device
	OLD_DEV=""
	ROOT_DEV="$(cat /proc/mounts | sed -n 's|^\(/dev/[^ ]*\) / .*|\1|p')"
	[ -n "$ROOT_DEV" ] || ROOT_DEV="rootfs"
        if [ -n "$OLD_UUID" ]; then
		if [ "x$OLD_UUID" = xrootfs ]; then
			OLD_DEV="$ROOT_DEV"
		else
			OLD_DEV="$(blkid | sed -n 's|^\(/dev[^:]*\):.* UUID="'"$OLD_UUID"'".*|\1|p')"
		fi
	fi

	# If needed, mount old root device
        if [ -n "$OLD_DEV" ] || [ -n "$link_tgt" ]; then
		mkdir -p /tmp/old-srv
		if [ "$OLD_DEV" = "$ROOT_DEV" ]; then
			mount -o bind / /tmp/old-srv
		elif [ -n "$link_tgt" ]; then
			mkdir -p /tmp/old-srv/srv
			[ \! -d "$link_gtg" ] || mount -o bind /"$link_gtg" /tmp/old-srv/srv
		else
			mkdir -p /tmp/old-srv/srv
			mount "$OLD_DEV" /tmp/old-srv/srv || die "Can't mount old srv - $OLD_DEV"
		fi

                # Migrate stuff
		rainbow all enable red
                if [ "`ls -1 /tmp/old-srv/srv | wc -l`" -gt 0 ]; then
                        rsync -r -a -HXS --numeric-ids --remove-source-files /tmp/old-srv/srv/ /srv || die "Moving files failed, please check manually what went wrong and what files were left on your old drive."
                        find /tmp/old-srv/srv -depth -type d -empty -delete
                fi
		rainbow all auto white

		# Cleanup everything
		if [ "$OLD_DEV" = "$ROOT_DEV" ]; then
                	umount -fl /tmp/old-srv
		else
                	umount -fl /tmp/old-srv/srv
		fi
                rm -rf /tmp/old-srv
		uci set storage.srv.old_uuid=""
		uci commit storage.srv.old_uuid
		if [ -n "$link_tgt" ]; then
			create_notification -s error "Your /srv was symlink. It might not have been migrated fully. Check what was left in $link_tgt and migrate it manually"
		else
			create_notification -s news "Your /srv was successfully moved from $OLD_DEV to $DEV"
		fi
        fi
}

stop() {
        umount -fl /srv
}

restart() {
        :
}

reload() {
        :
}
